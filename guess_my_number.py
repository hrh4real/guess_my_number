# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_NwC2S_PtfMIsUnaEd8xz7Lzg5TaJmCr
"""

# arge parse - -> name
# "guess which number I'm thinking of....1,2 or 3"
# player chooses a number
# computer tells whether its correct or not
# game_count
# player wins
# winning percentage
# play again Y or Q

# import imp
import sys
import random as rd
from enum import Enum


def guess_num(name):
    game_count = 0
    player_wins = 0
    # python_wins = 0
    # win_percent = (player_wins / game_count) * 100

    def guess_number():
        playerchoice = input(
            f"\n{name}, guess which number I'm thinking of....1, 2 or 3\n")
        if playerchoice not in ["1", "2", "3"]:
            print(f"\n{name}, please choose between 1, 2, or 3\n")
            return guess_number()
        player = int(playerchoice)

        computerchoice = rd.choice("123")
        computer = int(computerchoice)

        def decide_winner(player, computer):
            nonlocal player_wins
            # nonlocal python_wins
            nonlocal name

            if player == computer:
                player_wins += 1
                print(f"\n{name}, you guessed it right !\n")
            else:
                print(f"{name}, you guessed it wrong buddy :(\n")
        game_result = decide_winner(player, computer)

        # print(game_result)

        nonlocal game_count
        # nonlocal name
        game_count += 1

        print(f"game count : {game_count}")
        print(f"{name}'s wins : {player_wins}")
        print(f"{name}'s win percenatge : {(player_wins/game_count)*100}")

        print(f"\nPlay Again, {name}?")
        while True:
            playagain = input("\nY for Yes or \nQ to Quit \n")
            if playagain.lower() not in ["y", "q"]:
                continue
            else:
                break
        if playagain.lower() == "y":
            return guess_number()
        else:
            print("\nthanks for playing !\n")
            if __name__ == 'main':
                sys.exit(f"Bye {name}!")
            else :
                return
            # playagain = False
    return guess_number


if __name__ == '__main__':
    import argparse as ag
    #  import msilib

    parser = ag.ArgumentParser(
        description="Provides a personalized Game Experience."
    )

    parser.add_argument(
        "-n", "--name", metavar="name",
        required=True, help="The name of the person playing the game."
    )
    args = parser.parse_args()
    guess_my_number = guess_num(args.name)
    guess_my_number()